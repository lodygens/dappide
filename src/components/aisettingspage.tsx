/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/hsqBFbKvlLz
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Button } from "@/components/ui/button"
import { Textarea } from "@/components/ui/textarea"
import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from "@/components/ui/select"
import { Slider } from "@/components/ui/slider"
import { useState, useEffect } from 'react';

interface AiSettingsPageProps {
  onClose: () => void;
}

const AiSettingsPage: React.FC<AiSettingsPageProps> = ({ onClose }) => {

  const [presencePenalty, setPresencePenalty] = useState(0.6);
  const [frequencyPenalty, setFrequencyPenalty] = useState(0.5);
  const [topP, setTopP] = useState(0.9);
  const [maxToken, setMaxToken] = useState(500);
  const [temperature, setTemperature] = useState(0.75);

  return (
        <div className="fixed inset-0 bg-[#1c1c1c] flex items-center justify-center z-50">
          <div className="bg-[#1c1c1c] border border-[#00ff00] rounded-md p-6 w-full max-w-md">
            <h2 className="text-lg font-bold mb-4">AI Assistant Settings</h2>
            <div className="grid gap-4">
              <div>
                <label htmlFor="prompt" className="block mb-2">
                  System Prompt
                </label>
                <Textarea
                  id="prompt"
                  className="bg-[#1c1c1c] text-[#00ff00] font-['VT323'] resize-none"
                  placeholder="Enter your system prompt..."
                />
              </div>
              <div>
                <label htmlFor="mode" className="block mb-2">
                  Mode
                </label>
                <Select id="mode" defaultValue="gpt-4">
                  <SelectTrigger className="bg-[#1c1c1c] text-[#00ff00] font-['VT323']">
                    <SelectValue placeholder="Select mode" />
                  </SelectTrigger>
                  <SelectContent className="bg-[#1c1c1c] text-[#00ff00] font-['VT323']">
                    <SelectItem value="gpt-4">GPT-4</SelectItem>
                    <SelectItem value="gpt-3">GPT-3</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              <div>
                <label htmlFor="temperature" className="block mb-2">
                  Temperature: {0} - {1}
                </label>
                <Slider
                  id="temperature"
                  min={0}
                  max={1}
                  step={0.01}
                  value={[temperature]}
                  onValueChange={(value) => setTemperature(value[0])}
                  className="bg-[#1c1c1c] text-[#00ff00] font-['VT323']"
                />
                <div className="flex justify-between">
                  <span>0</span>
                  <span>{temperature.toFixed(2)}</span>
                  <span>1</span>
                </div>
              </div>
              <div>
                <label htmlFor="max-tokens" className="block mb-2">
                  Max Tokens: {0} - {1000}
                </label>
                <Slider
                  id="max-tokens"
                  min={0}
                  max={1000}
                  step={1}
                  value={[maxToken]}
                  onValueChange={(value) => setMaxToken(value[0])}
                  className="bg-[#1c1c1c] text-[#00ff00] font-['VT323']"
                />
                <div className="flex justify-between">
                  <span>0</span>
                  <span>{maxToken}</span>
                  <span>1000</span>
                </div>
              </div>
              <div>
                <label htmlFor="top-p" className="block mb-2">
                  Top P: {0} - {1}
                </label>
                <Slider
                  id="top-p"
                  min={0}
                  max={1}
                  step={0.01}
                  value={[topP]}
                  onValueChange={(value) => setTopP(value[0])}
                  className="bg-[#1c1c1c] text-[#00ff00] font-['VT323']"
                />
                <div className="flex justify-between">
                  <span>0</span>
                  <span>{topP.toFixed(2)}</span>
                  <span>1</span>
                </div>
              </div>
              <div>
                <label htmlFor="frequency-penalty" className="block mb-2">
                  Frequency Penalty: {0} - {1}
                </label>
                <Slider
                  id="frequency-penalty"
                  min={0}
                  max={1}
                  step={0.01}
                  value={[presencePenalty]}
                  onValueChange={(value) => setFrequencyPenalty(value[0])}
                  className="bg-[#1c1c1c] text-[#00ff00] font-['VT323']"
                />
                <div className="flex justify-between">
                  <span>0</span>
                  <span>{frequencyPenalty.toFixed(2)}</span>
                  <span>1</span>
                </div>
              </div>
              <div>
                <label htmlFor="presence-penalty" className="block mb-2">
                  Presence Penalty: {0} - {1}
                </label>
                <Slider
                  id="presence-penalty"
                  min={0}
                  max={1}
                  step={0.01}
                  value={[presencePenalty]}
                  onValueChange={(value) => setPresencePenalty(value[0])}
                  className="bg-[#1c1c1c] text-[#00ff00] font-['VT323']"
                />
                <div className="flex justify-between">
                  <span>0</span>
                  <span>{presencePenalty.toFixed(2)}</span>
                  <span>1</span>
                </div>
              </div>
              <div className="flex justify-end gap-2">
              <Button variant="ghost" onClick={onClose}>
              Save
              </Button>
              </div>
            </div>
          </div>
        </div>
      )
}

export default AiSettingsPage;